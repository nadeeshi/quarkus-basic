#define application properties, here we put both build and runtime properties
# we can specify dev profile(local configuration), test profile and prod profiles(remote), by default we get prod and dev test
# %profile.dev
greeting.name=Nadee
fb.three=Foo
fb.five=Bar

#expressions, use to do property wrapped
# this used to inject property into another property
fb.both=${fb.three}${fb.five}
fb.max=150

#Qurakus Settings
#change default quarkus server port 8080 to 8021
quarkus.http.port=8021
quarkus.http.test-port=0

#postgress db for RDBMS
quarkus.datasource.db-kind=postgresql
#quarkus.datasource.username=postgres
#quarkus.datasource.password=postgres
#quarkus.datasource.jdbc.url=jdbc:postgresql://127.0.0.1:5430/wisdom_pet
quarkus.datasource.reactive.url=postgresql://127.0.0.1:5432/wisdom_pet

#hibernate orm
#quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.database.generation=update

#CORS
quarkus.http.cors=true
quarkus.http.host=0.0.0.0
quarkus.http.cors.origins=*
quarkus.http.cors.headers=accept,authorization,content-type
quarkus.http.cors.methods=GET,POST,PUT,DELETE
quarkus.http.cors.access-control-max-age=24H
quarkus.http.cors.access-control-allow-credentials=false

#DOCKER
quarkus.container-image.build=true
#quarkus.container-image.name=quarkus-app
#quarkus.container-image.group=nrapp/nr-backend
#quarkus.container-image.registry=<AWS_ACCOUNT_ID>.dkr.ecr.us-east-2.amazonaws.com

###DEV###
%dev.quarkus.datasource.username=postgres
%dev.quarkus.datasource.password=postgres

###TEST###
%test.quarkus.datasource.username=postgres
%test.quarkus.datasource.password=postgres

###PROD###
#postgres-service - replace with actual postgres backend service name
#%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://postgres-service:5432/wisdom_pet
%prod.quarkus.datasource.reactive.url=postgresql://postgres-service:5432/wisdom_pet
